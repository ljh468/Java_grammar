package Object_grammer01;

public class SOLID {
    /*******************************************************************
     * 객체지향 5대원칙 ( SOLID )
     *
     * SRP (단일책임의 원칙)
     * - 작성된 클래스는 하나의 기능만 가지며 클래스가 제공하는 모든 서비스는 그 하나의 책임(변화의 축)을 수행하는데
     *   집중되어 있어야 한다는 원칙
     *
     * OCP (개방폐쇄의 원칙)
     * - 소프트웨어의 구성요소(컴포넌트, 클래스, 모듈, 함수)는 확장에는 열려있고, 변경에는 닫혀있어야 한다는 원칙
     *
     * LSP (리스코브 치환의 원칙)
     * - 부모 Class가 들어갈 자리에 자식 Class를 넣어도 잘 구동되어야 한다는 원칙
     *
     * ISP (인터페이스 분리 원칙)
     * - 한 클래스는 자신이 사용하지 않는 인터페이스는 구현하지 말아야 한다는 원칙
     *   즉, 다른 클래스에 종속될 때에는 가능한 최소한의 인터페이스만을 사용해야한다는 원칙
     *
     * DIP (의존성 역전 원칙)
     * - 상위 모듈은 하위 모듈에 종속되어서는 안되고 둘 다 추상화에 의존해야 한다는 원칙
     *   추상화는 세부사항에 의존하지 않는다. 세부사항은 추상화에 의해 달라져야 한다는 원칙
     *******************************************************************/
    public static void main(String[] args) {
        System.out.println("hello");
    }
}
